import React, { Component } from 'react';
import { connect } from 'dva';
import { Modal, Form, Input, Select, Textarea } from 'antd';

import { checkPhone } from '../../../utils/tools';

// import config from '../../../common/config';

const Option = Select.Option;
// const RadioGroup = Radio.Group;

@connect(({
  user,
  vip,
  loading,
}) => ({
  user,
  vip,
  loading: !!loading.effects['vip/add'],
}))
@Form.create()
export default class extends Component {
  handleCancel = () => {
    this.props.dispatch({
      type: 'vip/_hideModal',
      payload: { type: 'Add' },
    });
  }

  handleSubmit = (e) => {
    e.preventDefault();
    const {
      user,
      dispatch,
      form: { validateFieldsAndScroll },
    } = this.props;
    validateFieldsAndScroll((err, values) => {
      if (err) return;
      const data = {
        uid: user.currentUser.phoneno,
        username: '',  //用户名
        carno: '',  //会员卡号
        admin: '',  //店管理员号
        opno: '',  //操作员手机号
        nickname: '',  //名称
        post: '',  //操作员职位
        company: '',  //公司名称
        address: '',  //地址
        ...values,
      };
      dispatch({ type: 'vip/add', payload: data });
    });
  }

  render() {
    const {
      loading,
      vip: { showModalAdd },
      form: { getFieldDecorator },
    } = this.props;

    // 基础表单参数
    const basicFormProps = {
      labelCol: {
        span: 6,
      },
      wrapperCol: {
        span: 14,
      },
      hasFeedback: true,
    };

    return (
      <Modal
        title="新增会员"
        destroyOnClose
        maskClosable={false}
        visible={showModalAdd}
        confirmLoading={loading}
        onOk={this.handleSubmit}
        onCancel={this.handleCancel}
        afterClose={this.handAfterClose}
      >
        <Form layout="horizontal">
          <Form.Item {...basicFormProps} label="用户名">
            {getFieldDecorator('username', {
              initialValue: '',
              rules: [{ required: true, message: '用户名' }],
            })(
              <Input placeholder="请输入用户名" />
            )}
          </Form.Item>
          <Form.Item {...basicFormProps} label="会员卡号">
            {getFieldDecorator('carno', {
              initialValue: '',
              rules: [{ required: true, message: '会员卡号' 
            }, {
              validator: checkPhone,
            }],
            })(
              <Input placeholder="请输入会员卡号(手机号码)" />
            )}
          </Form.Item>
          <Form.Item {...basicFormProps} label="店管理员号">
            {getFieldDecorator('admin', {
              initialValue: '',
              rules: [{ required: true, message: '店管理员号' }],
            })(
              <Input placeholder="请输入店管理员号" />
            )}
          </Form.Item>
          <Form.Item {...basicFormProps} label="操作员手机号">
            {getFieldDecorator('opno', {
              initialValue: '',
              rules: [{
                required: true, message: '操作员手机号',
              }, {
                validator: checkPhone,
              }],
            })(
              <Input placeholder="请输入操作员手机号" />
            )}
          </Form.Item>
          <Form.Item {...basicFormProps} label="名称">
            {getFieldDecorator('nickname', {
              initialValue: '',
              rules: [{
                required: true, message: '名称',
              }],
            })(
              <Input placeholder="请输入名称" />
            )}
          </Form.Item>
          <Form.Item {...basicFormProps} label="操作员职位">
            {getFieldDecorator('post', {
              initialValue: '',
              rules: [{
                required: true, message: '操作员职位',
              }],
            })(
              <Input placeholder="请输入操作员" />
            )}
          </Form.Item>
          <Form.Item {...basicFormProps} label="公司名称">
            {getFieldDecorator('company', {
              initialValue: '',
              rules: [{
                required: true, message: '公司名称',
              }],
            })(
              <Input placeholder="请输入公司名称" />
            )}
          </Form.Item>
          <Form.Item {...basicFormProps} label="地址">
            {getFieldDecorator('address', {
              initialValue: '',
              rules: [{
                required: true, message: '地址',
              }],
            })(
              <Input placeholder="请输入地址" />
            )}
          </Form.Item>
          {/* <Form.Item {...basicFormProps} label="是否允许使用">
            {getFieldDecorator('allow', {
              initialValue: '1',
              rules: [{ required: true, message: '是否允许使用' }],
            })(
              <Select>
                <Option value='1'>允许</Option>
                <Option value='0'>不允许</Option>
              </Select>
            )}
          </Form.Item>
          <Form.Item {...basicFormProps} label="是否为管理员">
            {getFieldDecorator('isadmin', {
              initialValue: '1',
              rules: [{ required: true, message: '是否为管理员' }],
            })(
              <Select>
                <Option value='1'>是</Option>
                <Option value='0'>否</Option>
              </Select>
            )}
          </Form.Item> */}
        </Form>
      </Modal>
    );
  }
}
