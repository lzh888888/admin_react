import React, { PureComponent } from 'react';
import { connect } from 'dva';
import { Spin, Table, Card, Input, Avatar, Divider, Popconfirm, Badge, message } from 'antd';
import PageHeaderLayout from '../../layouts/PageHeaderLayout';

import ModalDetail from './ModalDetail';

import imgs from '../../common/imgs';
import styles from './index.less';

@connect(({ user, approve, loading }) => ({
  user,
  approve,
  getLoading: loading.effects['approve/get'] || false,
  handApproveLoading: loading.effects['approve/handApprove'] || false,
  handApproveChangeLoading: loading.effects['approve/handApproveChange'] || false,
}))
export default class extends PureComponent {
  constructor(props) {
    super(props);
    const statusMap = {
      '0': { text: '异常', status: 'default' },
      '1': { text: '新增', status: 'success' },
      '2': { text: '更改', status: 'warning' },
      '3': { text: '删除', status: 'error' },
    };
    this.columns = [{
      title: '图片',
      dataIndex: 'image1',
      width: 80,
      render: (text, record) => {
        const { image } = record;
        return (
          <Avatar src={image || imgs['logo']} shape="square" size="large" />
        );
      },
    }, {
      title: '产品名称',
      dataIndex: 'waresname',
      width: 130,
    }, {
      title: '提交类型',
      dataIndex: 'nkey',
      width: 90,
      render: value => <Badge {...statusMap[value]} />,
    }, {
      title: '提交者',
      dataIndex: 'username',
      width: 110,
    }, {
      title: '日期',
      dataIndex: 'billdate',
      width: 110,
    }, {
      title: '物料码',
      dataIndex: 'waresbno',
      width: 130,
    }, {
      title: '型号1',
      dataIndex: 'model',
      width: 110,
    }, {
      title: '型号2',
      dataIndex: 'model2',
      width: 110,
    }, {
      title: '型号3',
      dataIndex: 'model3',
      width: 110,
    }, {
      key: '_fill_',
    }, {
      title: '操作',
      key: 'action',
      fixed: 'right',
      width: 160,
      render: text => (
        <span>
          <a onClick={() => this.toDetail(text)}>详情</a>
          <Divider type="vertical" />
          <Popconfirm title="同意批准？" onConfirm={() => this.onAction(text, '同意')}>
            <a style={{ color: '#52c41a' }}>同意</a>
          </Popconfirm>
          <Divider type="vertical" />
          <Popconfirm title="拒绝批准？" onConfirm={() => this.onAction(text, '拒绝')}>
            <a style={{ color: '#cf1322' }}>拒绝</a>
          </Popconfirm>
        </span>
      ),
    }];
  }

  componentDidMount() {
    this.getList();
  }

  componentWillUnmount() {
    this.props.dispatch({ type: 'approve/clear' });
  }

  // 查询
  onSearch(value) {
    this.reUrlP({
      page: 1,
      keyword: value,
    });
  }

  // 页数切换
  onPageSwitch = (pagination) => {
    this.reUrlP({
      page: pagination.current,
    });
  }

  // 处理批准
  onAction = (item, type) => {
    const { username } = this.props.user.currentUser;
    const result = this.handnkeyParams(item, type);
    const params = {
      ...result,
      username,
      type: item.type,
      bno: item.billno,
      waresname: item.waresname,
      oldbillno: item.mbillno, // "更改"才需要
    };
    if (!result) {
      message.warn('nkey错误，处理失败！');
      return;
    }
    // 前面已处理同意或拒绝的请求参数
    if (item.nkey === '2') {
      this.props.dispatch({ type: 'approve/handApproveChange', payload: params });
    } else {
      this.props.dispatch({ type: 'approve/handApprove', payload: params });
    }
  }

  // 获取数据
  getList = () => {
    this.props.dispatch({ type: 'approve/get' });
  }

  // 修改所需的请求参数后再获取数据
  reUrlP = (params) => {
    this.props.dispatch({
      type: 'approve/reUrlP',
      payload: params,
    });
    this.getList();
  }

  // 根据产品的提交类型处理参数
  handnkeyParams = (item, type) => {
    let result;
    if (item.nkey === '1') {
      if (type === '同意') {
        result = { nk: '1', key: '1', nkey: '0', statu: '0' };
      } else if (type === '拒绝') {
        result = { nk: '1', key: '-3', nkey: '0', statu: '1' };
      }
    } else if (item.nkey === '2') {
      if (type === '同意') {
        result = { key: '0' };
      } else if (type === '拒绝') {
        result = { key: '1' };
      }
    } else if (item.nkey === '3') {
      if (type === '同意') {
        result = { nk: '3', key: '-1', nkey: '0', statu: '0' };
      } else if (type === '拒绝') {
        result = { nk: '3', key: '1', nkey: '0', statu: '1' };
      }
    } else {
      result = false;
    }
    return result;
  }

  // 详情
  toDetail = (text) => {
    this.props.dispatch({
      type: 'approve/showModal',
      payload: { type: 'Detail', item: text },
    });
  }

  render() {
    const {
      approve: { listData, urlP },
      getLoading,
      handApproveLoading,
      handApproveChangeLoading,
    } = this.props;
    const extraContent = (
      <div className={styles.extraContent}>
        <Input.Search
          className={styles.extraContentSearch}
          placeholder="名称或其它"
          onSearch={value => this.onSearch(value)}
          enterButton
        />
      </div>
    );
    return (
      <PageHeaderLayout title="审批产品">
        <div className={styles.standardList}>
          <Spin spinning={getLoading || handApproveLoading || handApproveChangeLoading} >
            <Card
              className={styles.listCard}
              bordered={false}
              extra={extraContent}
            >
              <Table
                scroll={{ x: 1250, y: 350 }}
                rowKey="id"
                columns={this.columns}
                dataSource={listData.list}
                onChange={this.onPageSwitch}
                pagination={{
                  current: urlP.page,
                  defaultCurrent: 1,
                  defaultPageSize: 15,
                  total: listData.total,
                }}
              />
            </Card>
          </Spin>
        </div>
        {<ModalDetail />}
      </PageHeaderLayout>
    );
  }
}
