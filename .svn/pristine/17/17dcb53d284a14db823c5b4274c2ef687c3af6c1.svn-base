import React, { PureComponent } from 'react';
// import moment from 'moment';
import { connect } from 'dva';
import { Row, Col, Card, List, Avatar, Carousel, Icon, Radio, Button, Table, Divider, Tag } from 'antd';
import { Bar } from 'components/Charts';
import PageHeaderLayout from '../../layouts/PageHeaderLayout';


// 引入 ECharts 主模块
var echarts = require('echarts/lib/echarts');
// 引入柱状图
require('echarts/lib/chart/bar');
// 引入折线图
require('echarts/lib/chart/line');
// 引入提示框和标题组件
require('echarts/lib/component/tooltip');
require('echarts/lib/component/title');
require ('echarts/lib/component/legend');
require ('echarts/lib/component/toolbox');



// import ModalEdit from './ModalEdit';
// import ModalDetail from './ModalDetail'; 

import styles from './index.less';
import imgs from '../../common/imgs';
import { reduce } from 'zrender/lib/core/util';

@connect(({
  user,
  home,
}) => ({
  user,
  home,
}))
export default class extends PureComponent {
  constructor(props){
    super(props);
    this.state = {
      xAxisData: ["08:00~12:00","12:00~16:00","16:00~20:00","20:00~00:00","00:00~08:00"],
      seriesDate1: [],
      seriesDate2: [],
      selectOptionValue: 'a',
      //
      business: [],
      layIn: [],
      noPay: [],
      preferentialMoney: [],
      //
      food: [],
      foodClass: []
    }
  }

  componentDidMount() {
    this.getList();
    //  this.setEchart();
  }

  componentWillUnmount() {
    // this.setEchart();
  }

  // componentWillReceiveProps(){
  //   this.setEchart();
  // }

  setEchart = () => {
    var myChart = echarts.init(document.getElementById('main'));
    let option = {
      // title:{
      //   text: '销售概况',
      //   x: 'center',
      //   fontSize: '10'
      // },
      tooltip: {
        trigger: 'axis',
        axisPointer: {
            type: 'cross',
            crossStyle: {
                color: 'red'
            }
        }
    },
    toolbox: {
        top: 5,
        right: 20,
        feature: {
            dataView: {show: true, readOnly: false},
            magicType: {show: true, type: ['line', 'bar']},
            restore: {show: true},
            saveAsImage: {show: true}
        }
    },
    legend: {
        y: 25,
        data:['销售额','销售单数']
    },
    xAxis: [
        {
            type: 'category',
            data: this.state.xAxisData,
            // data: ['8:00~12:00','12:00~16:00','16:00~20:00','20:00~00:00','00:00~8:00'],
            axisPointer: {
                type: 'shadow'
            }   
        }
    ],
    yAxis: [
        {
            type: 'value',
            name: '金额（元)',
            min: 0,
            // max: 250,
            splitNumber: 10000,
            splitLine:{  
              show:false  
            },
            interval: 10000,
            axisLabel: {
                formatter: '{value}'
            }
        },
        {
            type: 'value',
            name: '销售单数',
            min: 0,
            // max: 25,
            splitNumber: 100,
            interval: 100,
            splitLine:{  
              show:false  
            },
            axisLabel: {
                formatter: '{value}'
            }
        }
    ],
    series: [
        {
            name:'销售额',
            type:'bar',
            color: '#82c7eb',
            barGap: '0',
            // data:[2.0, 4.9, 7.0, 23.2, 25.6]
            data: this.state.seriesDate1
        },
        {
            name:'销售单数',
            type:'bar',
            color: '#A1DD70',
            yAxisIndex: 1,
            // data:[4, 3, 34, 15, 13]
            data: this.state.seriesDate2
        }
    ]
  };
    // 绘制图表
    myChart.setOption(option);
  }

  consoleLog=()=>{
    const {
      user,
      home
    } = this.props;
    const todayData = home.listData.list[1].today;
    console.log(todayData);
  }


  // // 查询
  // onSearch = (value) => {
  //   if (!value.trim()) {
  //     message.info('请输入再搜索');
  //   } else {
  //     this.reUrlP({
  //       page: 1,
  //       keyword: value,                                                                                                                                                                                                                           
  //     });
  //   }
  // }


  //销售图表改变日期
  dateSelect = async(e) =>{
    let optionValue = e.target.value;
    this.setState({
      selectOptionValue: optionValue
    });
    const { dispatch } = this.props;
    await dispatch({
     type: 'dishes/_changeReqParams',
    });
    const {
      user,
      home
    } = this.props;
    switch(optionValue){
      case 'a': 
        let todayData = home.listData.list[1].today;
        this.setState({
          xAxisData: todayData[0],
          seriesDate1: todayData[1],
          seriesDate2: todayData[2]
        });
        this.setEchart();
        break;
      case 'b': 
        // console.log('本周');
        let weekData = home.listData.list[1].week;
        this.setState({
          xAxisData: weekData[0],
          seriesDate1: weekData[1],
          seriesDate2: weekData[2]
        });
        this.setEchart();
        break;
      case 'c': 
        // console.log('本月');
        let monthData = home.listData.list[1].month;
        this.setState({
          xAxisData: monthData.key,
          seriesDate1: monthData.amount,
          seriesDate2: monthData.order
        });
        this.setEchart();
        break;
      case 'd': 
        // console.log('本年');
        let yearData = home.listData.list[1].year;
        this.setState({
          xAxisData: yearData.key,
          seriesDate1: yearData.amount,
          seriesDate2: yearData.order
        });
        this.setEchart();
        break;
    }
  }

  // 获取数据
  getList = () => {
    this.props.dispatch({ type: 'home/get' });
  }

  getUserList = () => {
    this.props.dispatch({ type: 'user/get' });
  }

  renderActivities() {
    const {
      user,
    } = this.props;
    const renderShowboss = () => {
      const { showboss } = user.currentUser;
      const value = showboss;
      if (value === '0') {
        return (
          <span>已开通</span>
        );
      } else if (value === '1') {
        return (
          <span>未开通</span>
        );
      };
    }
    return (
      <List.Item>
        <List.Item.Meta
          title={
            <span>
              <p><Icon type="phone" />电话号码：&nbsp;<span>{user.currentUser.tel}</span></p>
              <br />
              <p><Icon type="mobile" />手机号码：&nbsp;<span>{user.currentUser.phone}</span></p>
              <br />
              <p><Icon type="shop" />VIP餐厅：&nbsp;<span>{renderShowboss()}</span></p>
              <br />
              <p><Icon type="star-o" />点餐会员：&nbsp;<span>{user.currentUser.lastdate}到期</span></p>
            </span>
          }
        />
      </List.Item>
    );
  }

  // renderEchartsContent=()=>{
  //   return(
  //     <Row gutter={24}>
  //       <Col xs={24} sm={24} md={24} lg={24} xl={24} >
  //         <div className={styles.title2}>
  //           {/* <h1>今日销售状况</h1> */}
  //           <div>
  //             <Radio.Group onChange={this.dateSelect} defaultValue="a" buttonStyle="solid">
  //               <Radio.Button value="a">今日</Radio.Button>
  //               <Radio.Button value="b">本周</Radio.Button>
  //               <Radio.Button value="c">本月</Radio.Button>
  //               <Radio.Button value="d">本年</Radio.Button>
  //             </Radio.Group>
  //           </div>
  //         </div>
  //       </Col>
  //       <Col xs={24} sm={24} md={24} lg={24} xl={24} >
  //       <div id="main" className={styles.echartsContainer1}>
          
  //       </div>
  //       </Col>
  //     </Row>
  //   );
  // }


  render() {
    const {
      user,
      home: { listData },
    } = this.props;


    const pageHeaderContent = (
      <div className={styles.pageHeaderContent}>
        <div className={styles.avatar}>
          <Avatar size="large" src={user.currentUser.image} />
        </div>
        <div className={styles.content}>
          <div className={styles.contentTitle}>您好，{user.currentUser.username}，祝你开心每一天！</div>
          <div>以高效赢得市场，以诚信赢得客户，实现“互利共赢，共同成长”。</div>
        </div>
      </div>
    );

    const extraContent = (
      <div className={styles.extraContent}>
        <div className={styles.statItem}>
          <p>登录次数</p>
          <p>{user.currentUser.logincnt}</p>
        </div>
        {/* <div className={styles.statItem}>
          <p>新增</p>
          <p>0</p>
        </div>
        <div className={styles.statItem}>
          <p>删除</p>
          <p>0</p>
        </div> */}
      </div>
    );

    //销售概况
    const echartsContent = (
      <Row gutter={24}>
        <Col xs={24} sm={24} md={24} lg={24} xl={24} >
        <div className={styles.title2}>
          {/* <h1>今日销售状况</h1> */}
          <div><h1>今日销售状况</h1></div>
          <div>
            <Radio.Group onChange={this.dateSelect} defaultValue="a" buttonStyle="solid">
              <Radio.Button value="a">今日</Radio.Button>
              <Radio.Button value="b">本周</Radio.Button>
              <Radio.Button value="c">本月</Radio.Button>
              <Radio.Button value="d">本年</Radio.Button>
            </Radio.Group>
          </div>
        </div>
      </Col>
      <Col xs={24} sm={24} md={24} lg={24} xl={24} >
        <div id="main" className={styles.echartsContainer1}>
        </div> 
      </Col>
    </Row>
    );

    // 运营状况
    const salesData = listData.list;


    const businessConditions = listData.list[0];
    const salesOverview = listData.list[1];
    if(businessConditions != undefined){
      let business = businessConditions["business"];
      let layIn = businessConditions["layIn"];
      let noPay = businessConditions["noPay"];
      let preferentialMoney = businessConditions["preferentialMoney"];
      let todayData = listData.list[1].today;
      this.setState({
        business,
        layIn,
        noPay,
        preferentialMoney,
      });
      if(this.state.selectOptionValue == 'a'){
        this.setState({
          xAxisData: todayData[0],
          seriesDate1: todayData[1],
          seriesDate2: todayData[2],
          food: listData.list[2].food,
          foodClass: listData.list[2].foodClass
        });
        setTimeout(() => {
          this.setEchart();
        }, 10000);
      }

    }


    /////////////////////
    const columns = [{
      title: '排名',
      dataIndex: 'top',
      key: 'top',
    }, {
      title: '商品名称',
      dataIndex: 'name',
      key: 'name',
    }, {
      title: '数量',
      key: 'sum',
      dataIndex: 'sum',
    }, {
      title: '金额',
      key: 'money',
      dataIndex: 'money',
    }, {
      title: '较昨日销量',
      key: 'compare',
      dataIndex: 'compare',
    }];
    
    const data = this.state.food;
    ////////////////////
     /////////////////////
     const columns1 = [{
      title: '排名',
      dataIndex: 'top',
      key: 'top',
    }, {
      title: '商品中类名称',
      dataIndex: 'typename',
      key: 'typename',
    }, {
      title: '数量',
      key: 'sum',
      dataIndex: 'sum',
    }, {
      title: '金额',
      key: 'money',
      dataIndex: 'money',
    }, {
      title: '较昨日销量',
      key: 'compare',
      dataIndex: 'compare',
    }];
    
    const data1 = this.state.foodClass;
    ////////////////////
    
    return (
      <PageHeaderLayout
        breadcrumbList={[{ title: '' }]}
        content={pageHeaderContent}
        extraContent={extraContent}
      >
        {/* {(productSearch.listData.list.length > 0 || !!productSearch.urlP.keyword) && (
          <Row>
            <Spin spinning={productSearchLoading || delProductLoading}>
              <Card
                style={{ marginBottom: 24 }}
                className={styles.projectList}
                title="搜索结果"
                bordered={false}
              >
                <Table
                  scroll={{ x: 1250, y: 350 }}
                  rowKey="id"
                  columns={this.columns}
                  dataSource={productSearch.listData.list}
                  onChange={this.onPageSwitch}
                  pagination={{
                    current: productSearch.urlP.page,
                    defaultCurrent: 1,
                    defaultPageSize: 15,
                    total: productSearch.listData.total,
                  }}
                />
              </Card>
            </Spin>
          </Row>
        )} */}

        {/* 今日营业状况 */}
        <Row gutter={24}>
           <Col xs={24} sm={24} md={24} lg={24} xl={24} >
            <div className={styles.title1}>
              <h1>今日营业状况</h1>
            </div>
          </Col>
          <Col xs={24} sm={24} md={12} lg={9} xl={9} >
            <div className={styles.business}>
              <div className={styles.business_div}>
                <div>营业收入</div>
                <div>环比昨日增长{this.state.business.length!=0?this.state.business[0].income:0}%</div>
              </div>
              <div className={styles.business_div}>￥{this.state.business.length!=0?this.state.business[0].increase:0}元</div>
              <div className={styles.business_div}>订单笔数:{this.state.business.length!=0?this.state.business[0].orders:0}</div>
              <div className={styles.business_div}>含储值消费￥{this.state.business.length!=0?this.state.business[0].storedValue:0}元</div>
            </div>
          </Col>
          <Col xs={24} sm={24} md={12} lg={5} xl={5} >
            <div className={styles.layIn}>
              <div className={styles.layIn_div}>储值收入</div>
              <div className={styles.layIn_div}>{this.state.layIn.length!=0?this.state.layIn[0].orders:0}笔</div>
              <div className={styles.layIn_div}>￥{this.state.layIn.length!=0?this.state.layIn[0].income:0}</div>
            </div>
          </Col>
          <Col xs={24} sm={24} md={12} lg={5} xl={5} >
            <div className={styles.noPay}>
              <div className={styles.noPay_div}>未支付订单</div>
              <div className={styles.noPay_div}>{this.state.noPay.length!=0?this.state.noPay[0].orders:0}笔</div>
              <div className={styles.noPay_div}>￥{this.state.noPay.length!=0?this.state.noPay[0].income:0}</div>
            </div>
          </Col>
          <Col xs={24} sm={24} md={12} lg={5} xl={5} >
            <div className={styles.preferentialMoney}> 
            <div className={styles.preferentialMoney_div}>优惠金额</div>
              <div className={styles.preferentialMoney_div}>{this.state.preferentialMoney.length!=0?this.state.preferentialMoney[0].orders:0}笔</div>
              <div className={styles.preferentialMoney_div}>￥{this.state.preferentialMoney.length!=0?this.state.preferentialMoney[0].income:0}</div>
            </div>
          </Col>
        </Row>
        {/* 今日营业概况结束 */}

        {/* 销售概况 */}
        {echartsContent}
        {/* 销售概况结束 */}

            
        {/* 今日销售排行 */}
        <Row gutter={24}>
           <Col xs={24} sm={24} md={24} lg={24} xl={24} >
            <div className={styles.title1}>
              <h1>今日销售排行</h1>
            </div>
          </Col>
          <Col xs={24} sm={24} md={12} lg={12} xl={12} >
            <div className={styles.goodsTop}>
              <div>商品销量排行 TOP10</div>
              <div>
                <Table 
                  columns={columns}  
                  dataSource={data} 
                  pagination={{
                    defaultCurrent: 1,
                    defaultPageSize: 5,
                  }}
                />
              </div>
            </div>
          </Col>
          <Col xs={24} sm={24} md={12} lg={12} xl={12} >
            <div className={styles.goodsClassTop}>
              <div>商品中类销量排行 TOP10</div>
              <div>
                <Table 
                  columns={columns1} 
                  dataSource={data1} 
                  pagination={{
                    defaultCurrent: 1,
                    defaultPageSize: 5,
                  }}
                />
              </div>
            </div>
          </Col>
        </Row>
        {/* 今日销售排行结束 */}
      
        <Row gutter={24}>
          <Col
            xs={24}
            sm={16}
            md={24}
            lg={24}
            xl={8}
          >
            <Card
              bodyStyle={{ padding: 0 }}
              bordered={false}
              className={styles.activeCard}
              title="我的餐厅"
              extra={user.currentUser.title}
            >
              <List size="large">
                <div className={styles.activitiesList}>
                  {this.renderActivities()}
                </div>
              </List>
            </Card>
          </Col>

          <Col
            xs={24}
            sm={16}
            md={24}
            lg={24}
            xl={16}
          >
            <Card
              // bodyStyle={{ padding: 20 }}
              style={{ marginBottom: 24 }}
              bordered={false}
              className={styles.activeCard}
              title="运营状况"
            // loading={activitiesLoading}
            >
              <Bar
                height={200}
                data={salesData}
              />
            </Card>
          </Col>
        </Row>

        {/* <Row>
          <Col>
            <Card
              loading={salesTypeLoading}
              className={styles.salesCard}
              bordered={false}
              title="销售额类别占比"
              bodyStyle={{ padding: 24 }}
              extra={
                <div className={styles.salesCardExtra}>
                  <div className={styles.salesTypeRadio}>
                    <Radio.Group value={sType} onChange={this.handleChangesType}>
                      <Radio.Button value="all">全部渠道</Radio.Button>
                      <Radio.Button value="online">线上</Radio.Button>
                      <Radio.Button value="offline">门店</Radio.Button>
                    </Radio.Group>
                  </div>
                </div>
              }
              style={{ marginTop: 24, minHeight: 509 }}
            >
              <h4 style={{ marginTop: 8, marginBottom: 32 }}>销售额</h4>
              <Pie
                hasLegend
                subTitle="销售额"
                total={yuan(salesPieData.reduce((pre, now) => now.y + pre, 0))}
                data={salesPieData}
                valueFormat={val => yuan(val)}
                height={248}
                lineWidth={4}
              />
            </Card>
          </Col>
        </Row> */}
        {/* {<ModalEdit />} */}
        {/* {<ModalDetail />} */}

        {/* <Button onClick={this.consoleLog} >console.log</Button> */}
        
      </PageHeaderLayout>
    );
  }
}
