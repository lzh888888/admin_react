import React, { Component } from 'react';
import { connect } from 'dva';
import { Modal, Form, Input, Select} from 'antd';
import { checkPhone } from '../../../utils/tools';

// import config from '../../../common/config';

const Option = Select.Option;
// const RadioGroup = Radio.Group;

@connect(({
  user,
  vip,
  loading,
}) => ({
  user,
  vip,
  loading: !!loading.effects['vip/charge'],
}))
@Form.create()
export default class extends Component {
  handleCancel = () => {
    this.props.dispatch({
      type: 'vip/_hideModal',
      payload: { type: 'Charge' },
    });
  }

  handleSubmit = (e) => {
    e.preventDefault();
    const {
      user,
      dispatch,
      form: { validateFieldsAndScroll },
      vip: { activeItem },
    } = this.props;
    validateFieldsAndScroll((err, values) => {
      if (err) return;
    console.log(user.currentUser);
      const data = {
        uid: user.currentUser.phoneno,
        billno: activeItem.billno,
        cardno: activeItem.mno || '',  //会员卡号
        userno: activeItem.userno ||　'',  //操作员手机号
        userno: activeItem.cash ||　'',



        // username: activeItem.username || '',
        // carno: activeItem.carno || '',
        // type: '1',
        // admin: activeItem.admin || '',
        // opno: activeItem.opno || '',
        // nickname: activeItem.nickname || '',
        // post: activeItem.post || '',
        // company: activeItem.company || '',
        // address: activeItem.address || '',
        ...values, 
      };
    //   dispatch({ type: 'vip/charge', payload: data });
    });
  }

  render() {
    const {
      loading,
      vip: { showModalCharge, activeItem },
      form: { getFieldDecorator },
    } = this.props;

    // 基础表单参数
    const basicFormProps = {
      labelCol: {
        span: 6,
      },
      wrapperCol: {
        span: 14,
      },
      hasFeedback: true,
    };

    return (
      <Modal
        title="会员充值"
        destroyOnClose
        maskClosable={false}
        visible={showModalCharge}
        confirmLoading={loading}
        onOk={this.handleSubmit}
        onCancel={this.handleCancel}
        afterClose={this.handAfterClose}
      >
        <Form layout="horizontal">
        < Form.Item {...basicFormProps} label="会员卡号">
            {getFieldDecorator('mno', {
              initialValue: activeItem.carno,
              rules: [{ required: true, message: '会员卡号' }
            ,{
                validator: checkPhone,
            }],
            })(
              <Input placeholder="请输入会员卡号" />
            )}
          </Form.Item>
          <Form.Item {...basicFormProps} label="操作员手机号">
            {getFieldDecorator('userno', {
              initialValue: activeItem.opno,
              rules: [{
                required: true, message: '操作员手机号',
              }, {
                validator: checkPhone,
              }],
            })(
              <Input placeholder="请输入操作员手机号" />
            )}
          </Form.Item>
          <Form.Item {...basicFormProps} label="充值金额">
            {getFieldDecorator('cash', {
              initialValue: activeItem.cash,
              rules: [{
                required: true, message: '充值金额',
              }],
            })(
              <Input placeholder="请输入充值金额" />
            )}
          </Form.Item>







        {/* < Form.Item {...basicFormProps} label="用户名">
            {getFieldDecorator('username', {
              initialValue: activeItem.username,
              rules: [{ required: true, message: '用户名' }],
            })(
              <Input placeholder="请输入用户名" />
            )}
          </Form.Item>
          <Form.Item {...basicFormProps} label="会员卡号">
            {getFieldDecorator('carno', {
              initialValue: activeItem.carno,
              rules: [{ required: true, message: '会员卡号' 
            }, {
              validator: checkPhone,
            }],
            })(
              <Input placeholder="请输入会员卡号(手机号码)" />
            )}
          </Form.Item>
          <Form.Item {...basicFormProps} label="店管理员号">
            {getFieldDecorator('admin', {
              initialValue: activeItem.admin,
              rules: [{ required: true, message: '店管理员号' }],
            })(
              <Input placeholder="请输入店管理员号" />
            )}
          </Form.Item>
          <Form.Item {...basicFormProps} label="操作员手机号">
            {getFieldDecorator('opno', {
              initialValue: activeItem.opno,
              rules: [{
                required: true, message: '操作员手机号',
              }, {
                validator: checkPhone,
              }],
            })(
              <Input placeholder="请输入操作员手机号" />
            )}
          </Form.Item>
          <Form.Item {...basicFormProps} label="名称">
            {getFieldDecorator('nickname', {
              initialValue: activeItem.nickname,
              rules: [{
                required: true, message: '名称',
              }],
            })(
              <Input placeholder="请输入名称" />
            )}
          </Form.Item>
          <Form.Item {...basicFormProps} label="操作员职位">
            {getFieldDecorator('post', {
              initialValue: activeItem.post,
              rules: [{
                required: true, message: '操作员职位',
              }],
            })(
              <Input placeholder="请输入操作员" />
            )}
          </Form.Item>
          <Form.Item {...basicFormProps} label="公司名称">
            {getFieldDecorator('company', {
              initialValue: activeItem.company,
              rules: [{
                required: true, message: '公司名称',
              }],
            })(
              <Input placeholder="请输入公司名称" />
            )}
          </Form.Item>
          <Form.Item {...basicFormProps} label="地址">
            {getFieldDecorator('address', {
              initialValue: activeItem.address,
              rules: [{
                required: true, message: '地址',
              }],
            })(
              <Input placeholder="请输入地址" />
            )}
          </Form.Item> */}
        </Form>
      </Modal>
    );
  }
}
